import getDate from "../../utilities/date";
import { prisma } from "../../utilities/db";
import Header from "./components/Header";
import TimerContext from "./context/ChronoContext";
import "./globals.css";

export const metadata = {
  title: "Do.it",
  description: "Generated by create next app",
};

const { today } = getDate();

const fetchWeekNumTasksDone = async () => {
  const tasks = await prisma.task.aggregate({
    where: {
      date: today(),
      iscompleted: true,
    },
    _count: true,
  });
  return tasks;
};
const fetchWeekNumTasks = async () => {
  const tasks = await prisma.task.aggregate({
    where: {
      date: today(),
    },
    _count: true,
  });
  return tasks;
};

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const numTasks = await fetchWeekNumTasks();
  const numTasksDone = await fetchWeekNumTasksDone();

  return (
    <html lang="en">
      <body className="bgpattern h-screen">
        <main
          className=" flex flex-col  h-screen w-screen border -- sm:flex-row sm:h-[50rem] sm:m-auto 
         sm:max-w-5xl "
        >
          <TimerContext>
            <Header
              numTasks={numTasks._count}
              numTasksDone={numTasksDone._count}
            />
            <main className="flex  h-full border  -- sm:center sm:m-auto sm:w-3/4  sm:py-8 ">
              <main className=" m-auto w-full h-full xsm:w-full xsm:h-full bg-white border shadow-inner   -- sm:h-[95%] sm:w-[70%] sm:min-w-[70%] sm:m-auto sm:rounded">
                {children}
              </main>
            </main>
          </TimerContext>
        </main>
      </body>
    </html>
  );
}

// bg-topo-pattern
